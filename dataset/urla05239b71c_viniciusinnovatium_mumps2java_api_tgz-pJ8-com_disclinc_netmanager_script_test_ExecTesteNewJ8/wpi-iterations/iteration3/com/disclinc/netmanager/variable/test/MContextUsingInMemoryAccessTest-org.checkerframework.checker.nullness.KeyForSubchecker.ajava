package com.disclinc.netmanager.variable.test;

import static org.junit.Assert.assertEquals;
import mLibrary.mContext;
import mLibrary.mVar;
import org.junit.Before;
import org.junit.Test;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class MContextUsingInMemoryAccessTest {

    private  mContext m$;

    @org.checkerframework.dataflow.qual.Impure
    public void init() {
        m$ = new mContext();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void testSettingVariableValueInTwoSteps() {
        // Setting value in two steps
        mVar pedido = m$.var("pedido");
        pedido.var("item").set(33);
        assertEquals(33, m$.var("pedido", "item").get());
    }

    @org.checkerframework.dataflow.qual.Impure
    public void testSettingVariableValueInSingleStep() {
        // Setting value in single step
        m$.var("carro", "esportivo").set(66);
        assertEquals(66, m$.var("carro", "esportivo").get());
    }

    @org.checkerframework.dataflow.qual.Impure
    public void testLocalVariableAccess() {
        m$.var("x").set("local");
        assertEquals("local", m$.var("x").get());
    }

    @org.checkerframework.dataflow.qual.Impure
    public void testPublicVariableAccess() {
        m$.var("%x").set("publica");
        assertEquals("publica", m$.var("%x").get());
    }
}
