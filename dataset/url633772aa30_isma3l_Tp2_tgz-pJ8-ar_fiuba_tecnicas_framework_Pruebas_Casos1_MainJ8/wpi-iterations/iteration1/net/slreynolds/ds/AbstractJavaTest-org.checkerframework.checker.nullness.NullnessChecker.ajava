package net.slreynolds.ds;

import java.util.HashMap;
import net.slreynolds.ds.export.ExporterOptions;
import net.slreynolds.ds.export.GraphVizExporter;
import net.slreynolds.ds.export.SimpleGraphVizExporter;
import net.slreynolds.ds.model.BuilderOptions;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public abstract class AbstractJavaTest {

    private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String path;

    @org.checkerframework.dataflow.qual.SideEffectFree
    protected AbstractJavaTest(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String path) {
        this.path = path;
    }

    @org.checkerframework.dataflow.qual.Impure
    protected void saveToFiles(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Object obj, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String name) {
        saveToFiles(new Object[] { obj }, new String[] { name }, name);
    }

    @org.checkerframework.dataflow.qual.Impure
    protected void saveToFiles(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Object @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull [] objs, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull [] names, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String fileName) {
        ObjectSaver gvizSaver = new ObjectSaver(new GraphVizExporter());
        ObjectSaver simpleGvizSaver = new ObjectSaver(new SimpleGraphVizExporter());
        HashMap<String, Object> options = new HashMap<String, Object>();
        options.put(BuilderOptions.INLINE_STRINGS, Boolean.FALSE);
        options.put(ExporterOptions.OUTPUT_PATH, path + '/' + fileName + ".dot");
        gvizSaver.save(objs, names, options);
        options.put(ExporterOptions.OUTPUT_PATH, path + '/' + fileName + "_simple.dot");
        simpleGvizSaver.save(objs, names, options);
    }
}
