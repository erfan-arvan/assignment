package cz.mff.dpp.args.examples;

import cz.mff.dpp.args.Option;
import cz.mff.dpp.args.Parser;

/**
 * Simple Enum test/example.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public final class EnumTest {

    private static enum Day {

        SUNDAY,
        MONDAY,
        TUESDAY,
        WEDNESDAY,
        THURSDAY,
        FRIDAY,
        SATURDAY
    }

    static class EnumTestOptions {

        public @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.MonotonicNonNull Day day;

        @org.checkerframework.dataflow.qual.Impure
        public void daySetter(Day day) {
            dayFromSetter = day;
        }

        public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Day dayFromSetter;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void main(String[] args) throws Exception {
        EnumTestOptions enumOptions = new EnumTestOptions();
        Parser parser = new Parser(enumOptions);
        Day arg1 = Day.SUNDAY;
        Day arg2 = Day.THURSDAY;
        if (args.length == 0) {
            String[] localArgs = { "-d", "SuNDaY", "--day", arg2.toString() };
            parser.parse(localArgs);
        } else {
            parser.parse(args);
        }
        System.out.printf("-d: %s\n", enumOptions.day);
        System.out.printf("--day: %s\n", enumOptions.dayFromSetter);
        if (args.length == 0) {
            assert enumOptions.day.equals(arg1) : "-d set to wrong value!";
            assert enumOptions.dayFromSetter.equals(arg2) : "--day set to wrong value!";
        }
    }
}
