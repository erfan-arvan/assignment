package org.delaunay.dtfe.interpolation;

import org.delaunay.dtfe.DensityModel;
import org.delaunay.dtfe.DtfeTriangulationMap;
import org.delaunay.model.Triangle;
import org.delaunay.model.Vector;
import org.delaunay.model.Vertex;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class MeanInterpolationStrategy implements InterpolationStrategy {

    @org.checkerframework.dataflow.qual.Impure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull double getDensity(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull MeanInterpolationStrategy this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull DtfeTriangulationMap<? extends DensityModel> dtfe, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Vector v) {
        Triangle tri = dtfe.getTriangulation().locate(v);
        // Do not report density for triangles outside the convex hull of
        // map vertices.
        if (tri == null || dtfe.getTriangulation().touchesSuperVertex(tri)) {
            return 0.0;
        }
        double sum = 0.0;
        for (Vertex vert : tri.getVertices()) {
            sum += dtfe.getDensity(vert);
        }
        return sum / 3.0;
    }
}
