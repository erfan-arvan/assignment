/*     */
package org.ands.rifcs.base;

/*     */
/*     */
import java.util.ArrayList;
/*     */
import java.util.List;
/*     */
import org.w3c.dom.Element;
/*     */
import org.w3c.dom.Node;
/*     */
import org.w3c.dom.NodeList;

/*     */
/*     */
/*     */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class RelatedObject extends RIFCSElement {

    /*     */
    /*  36 */
    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull List<Relation> relations = new ArrayList();

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    protected RelatedObject(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Node n) throws /*     */
    RIFCSException /*     */
    {
        /*  48 */
        super(n, "relatedObject");
        /*  49 */
        initStructures();
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setKey(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String keyValue) /*     */
    {
        /*  61 */
        Element key = newElement("key");
        /*  62 */
        key.setTextContent(keyValue);
        /*  63 */
        getElement().appendChild(key);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String getKey() /*     */
    {
        /*  75 */
        NodeList nl = super.getElements("key");
        /*  76 */
        if (nl.getLength() == 1) /*     */
        {
            /*  78 */
            return nl.item(0).getTextContent();
            /*     */
        }
        /*     */
        /*  81 */
        return null;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Relation newRelation() throws /*     */
    RIFCSException /*     */
    {
        /*  99 */
        return new Relation(newElement("relation"));
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void addRelation(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String type, @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.Nullable String url, @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.Nullable String description, @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.Nullable String descriptionLanguage) throws /*     */
    RIFCSException /*     */
    {
        /* 120 */
        Relation relation = newRelation();
        /*     */
        /* 122 */
        relation.setType(type);
        /*     */
        /* 124 */
        if (url != null) /*     */
        {
            /* 126 */
            relation.setURL(url);
            /*     */
        }
        /*     */
        /* 129 */
        if (description != null) /*     */
        {
            /* 131 */
            relation.setDescription(description);
            /*     */
        }
        /*     */
        /* 134 */
        if (descriptionLanguage != null) /*     */
        {
            /* 136 */
            relation.setDescriptionLanguage(descriptionLanguage);
            /*     */
        }
        /*     */
        /* 139 */
        addRelation(relation);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull List<Relation> getRelations() /*     */
    {
        /* 151 */
        return this.relations;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void addRelation(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Relation relation) /*     */
    {
        /* 163 */
        getElement().appendChild(relation.getElement());
        /* 164 */
        this.relations.add(relation);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    private void initStructures() throws /*     */
    RIFCSException /*     */
    {
        /* 171 */
        NodeList nl = super.getElements("relation");
        /*     */
        /* 173 */
        for (int i = 0; i < nl.getLength(); i++) /*     */
        {
            /* 175 */
            this.relations.add(new Relation(nl.item(i)));
            /*     */
        }
        /*     */
    }
}
/* Location:           /Users/przemyslaw/Downloads/rifcs-api-1.3.0.jar
 * Qualified Name:     org.ands.rifcs.base.RelatedObject
 * JD-Core Version:    0.6.2
 */
