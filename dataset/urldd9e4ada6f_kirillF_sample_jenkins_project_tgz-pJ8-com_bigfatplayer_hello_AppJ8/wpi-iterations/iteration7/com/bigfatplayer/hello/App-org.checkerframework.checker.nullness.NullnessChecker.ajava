package com.bigfatplayer.hello;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class App {

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int add( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int a,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int b) {
        return a + b;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int mul( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int a,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int b) {
        return a * b;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull double divide( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int a,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int b) throws IllegalArgumentException {
        if (b == 0) {
            throw new IllegalArgumentException("Argument 'divisor' is 0");
        }
        return a / b;
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void main(String[] args) {
        Logger logger = LoggerFactory.getLogger(App.class);
        App app = new App();
        int result = app.add(2, 2);
        System.out.format("2 + 2 = %s\n", result);
        Thread serverThread = new Thread(new AppServer());
        Thread clientThread1 = new Thread(new AppClient());
        Thread clientThread2 = new Thread(new AppClient());
        serverThread.start();
        clientThread1.start();
        clientThread2.start();
    }
}
