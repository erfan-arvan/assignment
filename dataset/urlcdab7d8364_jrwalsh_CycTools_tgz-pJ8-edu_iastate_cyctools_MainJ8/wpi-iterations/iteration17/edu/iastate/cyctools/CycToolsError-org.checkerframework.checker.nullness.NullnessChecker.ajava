package edu.iastate.cyctools;

import javax.swing.JOptionPane;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class CycToolsError {

    // Check for connection related errors which are thrown by JavaCycConnection objects
    @org.checkerframework.dataflow.qual.Impure
    public static void checkForConnectionError(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Exception e) {
        if (e.getMessage().equalsIgnoreCase("Unknown host")) {
            CycToolsError.showError(e.getMessage() + "\nCould not determine host", "Connection error");
        } else if (e.getMessage().equalsIgnoreCase("Connection timed out")) {
            CycToolsError.showError(e.getMessage() + "\nServer not available", "Connection error");
        } else if (e.getMessage().equalsIgnoreCase("Read timed out")) {
            CycToolsError.showError(e.getMessage() + "\nServer found, but connection timed out. Possibly requires user login.", "Connection error");
        } else if (e.getMessage().equalsIgnoreCase("Problem connecting to remote socket")) {
            CycToolsError.showError(e.getMessage() + "\nJavaCycServer is not accessible", "Connection error");
        } else if (e.getMessage().equalsIgnoreCase("Problem logging in to remote server")) {
            CycToolsError.showError(e.getMessage() + "\nIncorrect username and password", "Login error");
        } else {
            throw new RuntimeException(e);
        }
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void showError(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String title) {
        JOptionPane.showMessageDialog(DefaultController.mainJFrame, message, title, JOptionPane.ERROR_MESSAGE);
    }

    @org.checkerframework.dataflow.qual.Impure
    public static void showWarning(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String title) {
        JOptionPane.showMessageDialog(DefaultController.mainJFrame, message, title, JOptionPane.WARNING_MESSAGE);
    }
}
