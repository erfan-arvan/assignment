package mSystem;

import mLibrary.mContext;
import mLibrary.mParent;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class mSystem extends mParent {

    private  Status status;

    private  License license;

    private  Encryption encryption;

    private  Process process;

    private  Version version;

    private OBJ obj;

    @org.checkerframework.dataflow.qual.SideEffectFree
    public mSystem( mContext m$) {
        super(m$);
        status = new Status(m$);
        license = new License(m$);
        encryption = new Encryption(m$);
        process = new Process(m$);
        version = new Version(m$);
        // TODO Auto-generated constructor stub
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Status getStatus() {
        return status;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setStatus(Status status) {
        this.status = status;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  License getLicense() {
        return license;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setLicense(License license) {
        this.license = license;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Encryption getEncryption() {
        return encryption;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setEncryption(Encryption encryption) {
        this.encryption = encryption;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Process getProcess() {
        return process;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setProcess(Process process) {
        this.process = process;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  Version getVersion() {
        return version;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setVersion(Version version) {
        this.version = version;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  OBJ getOBJ() {
        return obj;
    }
}
