/*     */
package org.ands.rifcs.base;

/*     */
/*     */
import org.w3c.dom.Node;

/*     */
/*     */
/*     */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class Arg extends RIFCSElement {

    /*     */
    /*     */
    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.SideEffectFree
    protected Arg(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Node n) throws /*     */
    RIFCSException /*     */
    {
        /*  41 */
        super(n, "arg");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setType(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String type) /*     */
    {
        /*  53 */
        super.setAttributeValue("type", type);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getType() /*     */
    {
        /*  66 */
        return super.getAttributeValue("type");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setRequired(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String required) /*     */
    {
        /*  78 */
        super.setAttributeValue("required", required);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getRequired() /*     */
    {
        /*  91 */
        return super.getAttributeValue("required");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setUse(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String use) /*     */
    {
        /* 103 */
        super.setAttributeValue("use", use);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getUse() /*     */
    {
        /* 116 */
        return super.getAttributeValue("use");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setName(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String name) /*     */
    {
        /* 128 */
        super.setTextContent(name);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String getName() /*     */
    {
        /* 140 */
        return super.getTextContent();
        /*     */
    }
}
/* Location:           /Users/przemyslaw/Downloads/rifcs-api-1.3.0.jar
 * Qualified Name:     org.ands.rifcs.base.Arg
 * JD-Core Version:    0.6.2
 */
