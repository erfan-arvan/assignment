/*     */
package org.ands.rifcs.base;

/*     */
/*     */
import org.w3c.dom.Element;
/*     */
import org.w3c.dom.Node;
/*     */
import org.w3c.dom.NodeList;

/*     */
/*     */
/*     */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class RelatedInfo extends RIFCSElement {

    /*     */
    /*  33 */
    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Identifier identifier = null;

    /*     */
    /*     */
    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.initialization.qual.FBCBottom.class)
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    protected RelatedInfo(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Node n) throws /*     */
    RIFCSException /*     */
    {
        /*  45 */
        super(n, "relatedInfo");
        /*  46 */
        initStructures();
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    public void setType(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String type) /*     */
    {
        /*  58 */
        super.setAttributeValue("type", type);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getType() /*     */
    {
        /*  71 */
        return super.getAttributeValue("type");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Identifier newIdentifier() throws /*     */
    RIFCSException /*     */
    {
        /*  89 */
        return new Identifier(newElement("identifier"));
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "this.identifier" })
    @org.checkerframework.dataflow.qual.Impure
    public void setIdentifier(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String identifier, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String type) throws /*     */
    RIFCSException /*     */
    {
        /* 105 */
        this.identifier = newIdentifier();
        /* 106 */
        this.identifier.setValue(identifier);
        /* 107 */
        this.identifier.setType(type);
        /* 108 */
        getElement().appendChild(this.identifier.getElement());
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Identifier getIdentifier() /*     */
    {
        /* 120 */
        return this.identifier;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    public void setTitle(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String title) /*     */
    {
        /* 132 */
        Element e = newElement("title");
        /* 133 */
        e.setTextContent(title);
        /* 134 */
        getElement().appendChild(e);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String getTitle() /*     */
    {
        /* 146 */
        NodeList nl = super.getElements("title");
        /* 147 */
        if (nl.getLength() == 1) /*     */
        {
            /* 149 */
            return nl.item(0).getTextContent();
            /*     */
        }
        /*     */
        /* 152 */
        return null;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    public void setNotes(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String notes) /*     */
    {
        /* 164 */
        Element e = newElement("notes");
        /* 165 */
        e.setTextContent(notes);
        /* 166 */
        getElement().appendChild(e);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable String getNotes() /*     */
    {
        /* 178 */
        NodeList nl = super.getElements("notes");
        /* 179 */
        if (nl.getLength() == 1) /*     */
        {
            /* 181 */
            return nl.item(0).getTextContent();
            /*     */
        }
        /*     */
        /* 184 */
        return null;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.initialization.qual.FBCBottom.class)
    @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.identifier" }, qualifier = org.checkerframework.checker.nullness.qual.Nullable.class)
    @org.checkerframework.dataflow.qual.Impure
    private void initStructures() throws /*     */
    RIFCSException /*     */
    {
        /* 191 */
        NodeList nl = super.getElements("identifier");
        /*     */
        /* 193 */
        if (nl.getLength() > 0) /*     */
        {
            /* 195 */
            this.identifier = new Identifier(nl.item(0));
            /*     */
        }
        /*     */
    }
}
/* Location:           /Users/przemyslaw/Downloads/rifcs-api-1.3.0.jar
 * Qualified Name:     org.ands.rifcs.base.RelatedInfo
 * JD-Core Version:    0.6.2
 */
