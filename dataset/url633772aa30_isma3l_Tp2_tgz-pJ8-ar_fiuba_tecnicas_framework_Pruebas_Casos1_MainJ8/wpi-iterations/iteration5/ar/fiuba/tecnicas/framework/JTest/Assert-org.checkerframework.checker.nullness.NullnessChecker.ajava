package ar.fiuba.tecnicas.framework.JTest;

import java.util.Arrays;

/*
Responsabilidad: Proveer una biblioteca de m√©todos a usar para realizar test de assertion
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class Assert {

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertArrayEquals(T[] expecteds, T[] actuals) throws AssertionError {
        if (!Arrays.equals(expecteds, actuals))
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertArrayEquals(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull T @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable [] expecteds, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull T @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable [] actuals) throws AssertionError {
        if (!Arrays.equals(expecteds, actuals))
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertEquals(double expected, double actual, double delta) throws AssertionError {
        double realdelta = Math.abs(expected - actual);
        if (realdelta > delta)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertEquals(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull double expected,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull double actual,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull double delta) throws AssertionError {
        double realdelta = Math.abs(expected - actual);
        if (realdelta > delta)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertEquals(T expected, T actual) throws AssertionError {
        if (!expected.equals(actual))
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertEquals(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, T expected, T actual) throws AssertionError {
        if (!expected.equals(actual))
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertFalse( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean condition) throws AssertionError {
        if (condition)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertFalse(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean condition) throws AssertionError {
        if (condition)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNotNull(T object) throws AssertionError {
        if (object == null)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNotNull(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, T object) throws AssertionError {
        if (object == null)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNotSame(T unexpected, T actual) throws AssertionError {
        if (unexpected == actual)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNotSame(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, T unexpected, T actual) throws AssertionError {
        if (unexpected == actual)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNull(T object) throws AssertionError {
        if (object != null)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertNull(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, T object) throws AssertionError {
        if (object != null)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertSame(T expected, T actual) throws AssertionError {
        if (expected != actual)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static <T> void assertSame(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message, T expected, T actual) throws AssertionError {
        if (expected != actual)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.Impure
    public static <k, T> void assertThat(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String reason, T actual, org.hamcrest.@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Matcher<k> matcher) throws AssertionError {
        if (!matcher.matches(actual))
            throw new AssertionError(reason);
    }

    @org.checkerframework.dataflow.qual.Impure
    public static <k, T> void assertThat(T actual, org.hamcrest.Matcher<k> matcher) throws AssertionError {
        if (!matcher.matches(actual))
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void assertTrue( @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean condition) throws AssertionError {
        if (!condition)
            throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void assertTrue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String message,  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull boolean condition) throws AssertionError {
        if (!condition)
            throw new AssertionError(message);
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void fail() throws AssertionError {
        throw new AssertionError();
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void fail(String message) throws AssertionError {
        throw new AssertionError(message);
    }
}
