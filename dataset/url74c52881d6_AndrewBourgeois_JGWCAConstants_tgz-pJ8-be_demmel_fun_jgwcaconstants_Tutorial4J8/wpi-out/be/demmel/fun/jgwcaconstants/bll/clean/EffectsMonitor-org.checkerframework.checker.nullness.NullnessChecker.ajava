package be.demmel.fun.jgwcaconstants.bll.clean;

import be.demmel.fun.jgwcaconstants.bll.GWCAOperations;
import java.io.IOException;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class EffectsMonitor {

    private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull GWCAOperations gwcaOperations;

    @org.checkerframework.dataflow.qual.SideEffectFree
    public EffectsMonitor(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull GWCAOperations gwcaOperations) {
        this.gwcaOperations = gwcaOperations;
    }

    /**
     * @return the number of effects currently on you
     */
    @org.checkerframework.dataflow.qual.Impure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int getEffectCount() throws IOException {
        return this.gwcaOperations.getEffectCount();
    }

    /**
     * @param skillId
     * @return If the effect exists on you, the id of the effect is returned.
     * @throws IOException
     */
    @org.checkerframework.dataflow.qual.Impure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int getEffect(int skillId) throws IOException {
        return this.gwcaOperations.getEffect(skillId);
    }

    /**
     * @param effectIndex (ï¿½-based)
     * @return the skill ID of the specified effect
     * @throws IOException
     */
    @org.checkerframework.dataflow.qual.Impure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int getEffectByIndex(int effectIndex) throws IOException {
        return this.gwcaOperations.getEffectByIndex(effectIndex);
    }

    /**
     * @param skillId
     * @return  If the effect exists on you, the total duration and the current time left of the effect is returned as floats in milliseconds.
     * @throws IOException
     */
    @org.checkerframework.dataflow.qual.Impure
    public  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull [] getEffectDuration(int skillId) throws IOException {
        return this.gwcaOperations.getEffectDuration(skillId);
    }
}
