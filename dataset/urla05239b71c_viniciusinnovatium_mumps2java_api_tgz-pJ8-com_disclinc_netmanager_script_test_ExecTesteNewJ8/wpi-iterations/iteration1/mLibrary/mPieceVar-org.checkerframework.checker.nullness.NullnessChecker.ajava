package mLibrary;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class mPieceVar extends mVar {

    private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String delimiter;

    private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.MonotonicNonNull Integer position;

    @org.checkerframework.dataflow.qual.Impure
    public mPieceVar(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull mVar var, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Object delimiter, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Object position) {
        super(var.getSubs(), var.getmData());
        this.delimiter = String.valueOf(delimiter);
        if (position instanceof Integer) {
            this.position = (Integer) position;
        } else if (position instanceof Double) {
            this.position = ((Double) position).intValue();
        } else {
            if (position instanceof String) {
                this.position = Double.valueOf(position.toString()).intValue();
                try {
                } catch (NumberFormatException e) {
                }
            } else {
                this.position = null;
            }
        }
        if (this.position == null || this.position < 0) {
            throw new IllegalArgumentException("The position paramenter must greater than zero");
        }
    }

    @org.checkerframework.dataflow.qual.Impure
    public void set(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull mPieceVar this, @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Object value) {
        if (value instanceof mVar) {
            value = ((mVar) value).get();
        }
        super.set(mFnc.$setpiece(this.get(), delimiter, position, value));
    }
}
