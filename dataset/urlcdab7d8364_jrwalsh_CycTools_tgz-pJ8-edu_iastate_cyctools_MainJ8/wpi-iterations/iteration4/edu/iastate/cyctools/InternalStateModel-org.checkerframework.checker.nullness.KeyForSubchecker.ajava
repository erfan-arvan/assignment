package edu.iastate.cyctools;

import edu.iastate.cyctools.externalSourceCode.AbstractModel;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public class InternalStateModel extends AbstractModel {

    private  State state;

    @org.checkerframework.dataflow.qual.Impure
    public InternalStateModel() {
        initDefault();
    }

    @org.checkerframework.dataflow.qual.Impure
    public void initDefault( InternalStateModel this) {
        this.state = State.NOT_CONNECTED;
    }

    @org.checkerframework.dataflow.qual.Impure
    public void setState( InternalStateModel this,  State state) {
        State oldState = this.state;
        this.state = state;
        firePropertyChange(DefaultController.BROWSER_STATE_PROPERTY, oldState, state);
    }

    @org.checkerframework.dataflow.qual.Pure
    public  State getState() {
        return this.state;
    }

    public enum State {

        NOVALUE,
        NOT_CONNECTED,
        SHOW_MAIN_SCREEN,
        SHOW_FRAMEBROWSE,
        SHOW_EXPORT,
        SHOW_SEARCH,
        SHOW_STRUCTURE_EXPORT,
        SHOW_DATABASE_COMPARE,
        SHOW_IMPORT;

        @org.checkerframework.dataflow.qual.Impure
        public static  State value(String state) {
            try {
                return valueOf(state.toUpperCase());
            } catch (Exception e) {
                return NOVALUE;
            }
        }
    }
}
