/*     */
package org.ands.rifcs.base;

/*     */
/*     */
import java.util.ArrayList;
/*     */
import java.util.Date;
/*     */
import java.util.List;
/*     */
import org.w3c.dom.Element;
/*     */
import org.w3c.dom.Node;
/*     */
import org.w3c.dom.NodeList;

/*     */
/*     */
/*     */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class Name extends RIFCSElement {

    /*     */
    /*  36 */
    private @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull List<NamePart> nameParts = new ArrayList();

    /*     */
    /*     */
    @org.checkerframework.checker.nullness.qual.EnsuresNonNull({ "#1" })
    @org.checkerframework.dataflow.qual.Impure
    protected Name(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.Nullable Node n) throws /*     */
    RIFCSException /*     */
    {
        /*  48 */
        super(n, "name");
        /*  49 */
        initStructures();
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setType(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String type) /*     */
    {
        /*  61 */
        super.setAttributeValue("type", type);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getType() /*     */
    {
        /*  74 */
        return super.getAttributeValue("type");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setLanguage(String lang) /*     */
    {
        /*  86 */
        super.setAttributeValueNS("http://www.w3.org/XML/1998/namespace", "xml:lang", lang);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getLanguage() /*     */
    {
        /*  99 */
        return super.getAttributeValueNS("http://www.w3.org/XML/1998/namespace", "xml:lang");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setDateFrom(Date dateFrom) /*     */
    {
        /* 112 */
        super.setAttributeValue("dateFrom", RegistryObject.formatDate(dateFrom));
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setDateFrom(String dateFrom) /*     */
    {
        /* 126 */
        super.setAttributeValue("dateFrom", dateFrom);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getDateFrom() /*     */
    {
        /* 135 */
        return super.getAttributeValue("dateFrom");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setDateTo(Date dateTo) /*     */
    {
        /* 147 */
        super.setAttributeValue("dateTo", RegistryObject.formatDate(dateTo));
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void setDateTo(String dateTo) /*     */
    {
        /* 161 */
        super.setAttributeValue("dateTo", dateTo);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull String getDateTo() /*     */
    {
        /* 170 */
        return super.getAttributeValue("dateTo");
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull NamePart newNamePart() throws /*     */
    RIFCSException /*     */
    {
        /* 188 */
        return new NamePart(newElement("namePart"));
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void addNamePart(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull NamePart namePart) /*     */
    {
        /* 200 */
        getElement().appendChild(namePart.getElement());
        /* 201 */
        this.nameParts.add(namePart);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    public void addNamePart(String namePart, String type) throws /*     */
    RIFCSException /*     */
    {
        /* 216 */
        NamePart np = newNamePart();
        /* 217 */
        np.setValue(namePart);
        /* 218 */
        np.setType(type);
        /* 219 */
        getElement().appendChild(np.getElement());
        /* 220 */
        this.nameParts.add(np);
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull List<NamePart> getNameParts() /*     */
    {
        /* 232 */
        return this.nameParts;
        /*     */
    }

    /*     */
    /*     */
    @org.checkerframework.dataflow.qual.Impure
    private void initStructures() throws /*     */
    RIFCSException /*     */
    {
        /* 239 */
        NodeList nl = super.getElements("namePart");
        /*     */
        /* 241 */
        for (int i = 0; i < nl.getLength(); i++) /*     */
        {
            /* 243 */
            this.nameParts.add(new NamePart(nl.item(i)));
            /*     */
        }
        /*     */
    }
}
/* Location:           /Users/przemyslaw/Downloads/rifcs-api-1.3.0.jar
 * Qualified Name:     org.ands.rifcs.base.Name
 * JD-Core Version:    0.6.2
 */
